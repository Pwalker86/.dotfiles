set nocompatible              " be iMproved, required
filetype off                  " required

" Plugins {{{
" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

Plugin 'VundleVim/Vundle.vim'
Plugin 'tpope/vim-fugitive'
Plugin 'scrooloose/nerdtree'
Plugin 'ctrlpvim/ctrlp.vim'
Plugin 'bling/vim-airline'
Plugin 'tpope/vim-endwise'
Plugin 'elixir-lang/vim-elixir'

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" Put your non-Plugin stuff after this line
"}}}

" Nerdtree {{{ 
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
map <BS> :NERDTreeToggle<CR>
"}}}

" CtrlP settings {{{
let g:ctrlp_match_window = 'bottom,order:ttb'
let g:ctrlp_switch_buffer = 0
let g:ctrlp_working_path_mode = 0
let g:ctrlp_user_command = 'ag %s -l --nocolor --hidden -g ""'
"}}}

" General Vim settings {{{
syntax enable           " enable syntax processing
set number              " show line numbers
set cursorline          " highlight current line
filetype indent on      " load filetype-specific indent files
set showmatch           " highlight matching [{()}]
set incsearch           " search as characters are entered
set hlsearch            " highlight matches
set ignorecase
set smartcase
set tabstop=2       " number of visual spaces per TAB
set softtabstop=2   " number of spaces in tab when editing
set expandtab       " tabs are spaces
set wildmenu            " visual autocomplete for command menu
set lazyredraw          " redraw only when we need to.
set foldenable          " enable folding
set foldlevelstart=10   " open most folds by default
set foldnestmax=10      " 10 nested fold max
" fold vimrc
set foldmethod=marker
set foldlevel=0
set modelines=1
" space open/closes folds
nnoremap <space> za
set foldmethod=indent   " fold based on indent level
" save session
nnoremap <leader>s :mksession<CR>
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

inoremap jk <esc>

" Reselect visual block after indent/outdent
vnoremap < <gv
vnoremap > >gv

map :Q :q
map :W :w
map <C-c> a<C-c><ESC>
vnoremap <C-C> :w !pbcopy<CR><CR>

let mapleader=","  " leader is comma
nnoremap <leader><space> :nohlsearch<CR>
"}}}

" vim:foldmethod=marker:foldlevel=0
